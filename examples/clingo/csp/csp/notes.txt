- without loop formulas we only seem to get supported models
    von kaminski kaminski an alle:
    z == &sum{ x } > 1.
    von kaminski kaminski an alle:
    z :- def_x, zz.
    von kaminski kaminski an alle:
    zz == &sum { x } > 1
- changed print, main, init functions, options and theory ->
  one project with options to switch? Several projects?
- theory atoms were unreachable so I had to copy them
    Best way to pass them? When are they unreachable?
- Had unsat when syntactically identical constraints with different literals were added 
    -> had to check for duplicates
- fixed undefined to -max_int as 0 is often used -> still problems in combination with domain statements (even with fix above)
- How to best adapt test environment?

Potassco paper:
    - Theory tutorial: What is relevant? How to rebuilt clingo-dl section?

    - Changes due to new interface:
        - make everything an Application
        - set PropagatorCheckMode

Dorabot:
 - only one action at a time PER APJ
 - 100th OF a second
 (or integer difference INequations)
 - Pickup/Putdown duration given by dorabot? Parameterize?
 - Why both doing rules?

 KR Response:
 Reviewer 1
  - rather theoretically-oriented ASP sub-community --> highlight practicallity (semantics for potassco systems, translation into CASP)
  - do not understand their ASP point, both sides are clearly constraint atoms with an implication inbetween

Reviewer 2:
  - lazy or non-lazy are implementations, not semantics
  - For a genearal translation, relate to the old paper

Reviewer 3:
  - basic terms are non-conditional, clarifyd

TODO:
  Structure:
    - HT_c == Logic of Here-and-There with Constraints
    - Systems (Prototyp, ClingoDL, CLingoLP, Clingcon, ASPRINmT)
    - Application (Train, DSE, Fluto)
  - SMT implementations
  - theory reiyfication
  - prototype presentation
  - Reachability/Pathing/conflict-free routing
